(function(){this.FaultReportController=["$scope","$http","$modal","$routeParams","notification","faultReport","breadcrumb",function(n,t,i,r,u,f,e){var o,s;return s=f.data,n.faultReport=f.data,n.add=function(){return t.post("api/fault/comment",{FaultReportId:f.data.id,comment:n.comment}).then(function(t){return n.comment="",n.faultReport=t.data})},o=function(i){return t.post("api/fault/"+i,{FaultReportId:f.data.id,comment:n.comment}).then(function(t){return t.data==="null"?u("No responsible person assigned to this organisation and sector",!1,!0):(n.comment="",n.faultReport=t.data)})},n.confirm=function(){return o("confirm")},n.reject=function(){return o("reject")},n.close=function(){return o("close")},n.duplicate=function(){var r;return r=i.open({templateUrl:"content/views/faultReportDuplicateAction.html",controller:["$scope","$modalInstance","faults",function(n,t,i){return n.selected=null,n.modal=t,n.faults=i.data.items,n.select=function(t){return n.selected&&(n.selected.selected=!1),n.selected=t,t.selected=!0}}],resolve:{faults:["$http",function(n){return n.get("api/faultReportInternal",{params:{status:2,organisation:s.organisationId,sectorProgram:s.sectorProgramId}})}]}}),r.result.then(function(i){if(i)return t.post("api/fault/duplicate",{FaultReportId:f.data.id,comment:n.comment,DuplicateFaultId:i}).then(function(t){return n.comment="",n.faultReport=t.data})})},e([])}]}).call(this)